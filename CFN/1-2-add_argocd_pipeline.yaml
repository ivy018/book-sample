AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CICD Pipelines using ArgoCD

Parameters:
  BuildImageName:
    Description: Docker image for application build
    Type: String
    Default: aws/codebuild/standard:5.0
  Branch:
    Description: Repository branch name
    Type: String
    Default: main
  PipelineRoleARN:
    Description: Pipeline service role arn
    Type: String
    Default: arn:
  RepositoryName:
    Description: Repository name
    Type: String
    Default: app1-repo
  ArtifactBucketName:
    Description: S3 Location for artifacts name
    Type: String
    Default: ci-results-bucket1 
  BuildComputeType:
    Description: Define a compute type when it runs on a build process
    Type: String
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
      - BUILD_GENERAL1_2XLARGE
    Default: BUILD_GENERAL1_MEDIUM
  EnvironmentType:
    Description: Environment type for CodeBuild environment
    Type: String
    AllowedValues:
      - LINUX_CONTAINER
      - LINUX_GPU_CONTAINER
      - ARM_CONTAINER
    Default: LINUX_CONTAINER

Resources:
  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]
  AmazonCloudWatchEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref RepositoryName ] ]
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - main
      Targets:
        -
          Arn: 
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: codepipeline-AppPipeline
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !Ref PipelineRoleARN
      Name: !Join
        - "-"
        - - !Ref RepositoryName
          - "pipeline"
          - !Join ['-', !Split ['/', !Ref Branch]]
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Provider: CodeCommit
                Owner: AWS
                Version: '1'
              OutputArtifacts:
                - Name: Source
              Configuration:
                RepositoryName: !Ref RepositoryName
                BranchName: !Ref Branch
                PollForSourceChanges: false
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Provider: CodeBuild
                Owner: AWS
                Version: '1'
              RunOrder: 1
              InputArtifacts:
                - Name: Source
              Configuration:
                ProjectName: !Ref BuildProject
              OutputArtifacts:
                - Name: BuildArtifact    
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket

  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Join
        - "-"
        - - !Ref RepositoryName
          - "ecr"
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join
        - "-"
        - - !Ref RepositoryName
          - "Build"
          - !Join ['-', !Split ['/', !Ref Branch]]
      ServiceRole: !Ref PipelineRoleARN
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref EnvironmentType
        ComputeType: !Ref BuildComputeType
        Image: !Ref BuildImageName
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: BRANCH_NAME
            Value: !Ref Branch
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: SERVICE_NAME
            Value: !Ref RepositoryName
          - Name: SERVICE_ARN
            Value: !Ref PipelineRoleARN
          - Name: ECR_REPO
            Value: !Ref ECRRepository
          - Name: REGION_NAME
            Value: !Ref AWS::Region
      Source:
        Type: CODEPIPELINE
        BuildSpec: build_scripts_for_argoCD/buildspec.build.yaml
      Cache:
        Type: S3
        Location: !Ref ArtifactBucket
  ImageTagParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join
        - "/"
        - - ""
          - !Join ['/', !Split ['-', !Ref RepositoryName]]
          - !Ref Branch
          - tag
      Type: String
      Value: default
      Description: Main branch image tag
  
  # S3 Bucket for saving pipeline artifact
  ArtifactBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "${ArtifactBucketName}-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
  # Bucket policy for artifact bucket
  ArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: BucketAccess
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
                - !GetAtt PipelineServiceRole.Arn
            Action: 
              - "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${ArtifactBucket}"
              - !Sub "arn:aws:s3:::${ArtifactBucket}/*"
  AppRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepositoryName
      RepositoryDescription: This is a application repository.
